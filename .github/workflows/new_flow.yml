# Copyright 2022 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the 'License');
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an 'AS IS' BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: 'New Flow With Input'

env:
 IS_DATA: "true"
 DATADOG_API_KEY: ${{ secrets.DATADOG_API_KEY }}

 
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:
    inputs:
      send_to_datadog:
        description: 'Send to Datadog(true / false)'
        required: false
        default: 'false'

jobs:
  gen-readme:
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v3

      - name: 'Setup go'
        uses: actions/setup-go@v3
        with:
          go-version: '^1.17.7'

      - name: 'Generate Readme'
        run: go run scripts/generate.go readme

      - name: 'Validate Diff'
        run: |
          STATUS=$(git status --porcelain)
          if [[ -n "$STATUS" ]]; then
            echo "ERROR: README has not been updated"
            echo ""
            echo " Run the following command to update the README: go run scripts/generate.go readme"
            exit 1
          fi
       
  export-and-send-logs:
    runs-on: ubuntu-latest
    permissions:
      actions: read  # Required to fetch workflow logs
    steps:
      - name: Export logs
        id: export_logs
        uses: actions/download-artifact@v2
        with:
          name: logs
          path: ./logs

      - name: Send logs to Datadog
        run: |
          for log_file in ./logs/*; do
            curl -X POST "https://http-intake.logs.datadoghq.com/v1/input" \
            -H "Content-Type: text/plain" \
            -H "DD-API-KEY: ${{ secrets.DATADOG_API_KEY }}" \
            --data-binary @"$log_file"
          done
